#
name: Create and publish a Docker image

# Configures this workflow to run every time a change is pushed to the branch called `release`.
on:
  push:
    branches: ["main"]

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: filkomunklab/obe-service:latest

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build-and-push

  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Copy Docker Compose file to server
  #       uses: appleboy/scp-action@v0.1.7
  #       with:
  #         host: ${{ secrets.SSH_HOST }}
  #         username: ${{ secrets.SSH_USERNAME }}
  #         password: ${{ secrets.SSH_PASSWORD }}
  #         source: "./docker-compose.yml"
  #         target: obe

  #     - name: Deploy using Docker Compose
  #       uses: appleboy/ssh-action@v1.0.3
  #       env:
  #         DATABASE_URL: ${{ secrets.DATABASE_URL }}
  #         SECRET_KEY: ${{ secrets.SECRET_KEY }}
  #       with:
  #         host: ${{ secrets.SSH_HOST }}
  #         username: ${{ secrets.SSH_USERNAME }}
  #         password: ${{ secrets.SSH_PASSWORD }}
  #         envs: POSTGRES_USER,POSTGRES_PASSWORD,POSTGRES_DB,POSTGRES_PORT,PORT,SECRET_KEY,FIREBASE_API_KEY,DATABASE_URL
  #         script: |
  #           cd obe
  #           echo "DATABASE_URL=${DATABASE_URL}" >> .env
  #           echo "SECRET_KEY=${SECRET_KEY}" >> .env
  #           sudo docker compose down
  #           sudo docker compose pull
  #           sudo docker compose up -d obe
  #           rm .env
